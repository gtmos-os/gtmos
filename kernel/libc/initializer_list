/*
 * File originally sourced from <https://github.com/osdev0/freestanding-cxx-hdrs>
 *
 * Copyright 2017-2020 cxxshim Contributors
 * Copyright (C) 2023 mintsuki and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

#ifndef _CXXSHIM_INITIALIZER_LIST
#define _CXXSHIM_INITIALIZER_LIST

#include <stddef.h>

namespace std {

template<typename T>
class initializer_list {
public:
	using value_type = T;
	using iterator = const T*;
	using const_iterator = const T*;
	using size_type = size_t;

	constexpr initializer_list() noexcept
	: _array(0), _len(0) { }

	constexpr size_type size() const noexcept {
		return _len;
	}

	constexpr const_iterator begin() const noexcept {
		return _array;
	}

	constexpr const_iterator end() const noexcept {
		return _array + _len;
	}
private:
	iterator _array;
	size_type _len;

	constexpr initializer_list(const_iterator array, size_type len)
	: _array(array), _len(len) { }
};

} // namespace std

#endif // _CXXSHIM_INITIALIZER_LIST
